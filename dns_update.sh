#!/bin/bash
# dns_update.sh - Interactive script to configure DNS servers with validation and response time feedback

set -e

# Ensure script is run as root
if [ "$(id -u)" -ne 0 ]; then
    dialog --title "Permission Denied" --msgbox "This script must be run as root." 7 50
    exit 1
fi

RESOLV_FILE="/etc/resolv.conf"

# Show current DNS servers
CURRENT_DNS=$(grep "nameserver" "$RESOLV_FILE" | awk '{print $2}')
dialog --title "Current DNS Settings" --msgbox "Current DNS Servers Detected:\n$CURRENT_DNS\n\nYou'll now be guided through entering new DNS servers one at a time.\nPress Cancel to finish." 12 60

# Make sure dig is available
if ! command -v dig &>/dev/null; then
    apt update && apt install -y dnsutils
fi

DNS_SERVERS=()

while true; do
    DNS=$(dialog --stdout --inputbox "Enter a DNS server IP address (or press Cancel to finish):" 8 50)
    [[ -z "$DNS" ]] && break

    # Basic IPv4 format check
    if [[ ! "$DNS" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
        dialog --title "Invalid Format" --msgbox "That doesn't look like a valid IPv4 address." 6 50
        continue
    fi

    while true; do
        # Use dig to check response time
        RESPONSE_TIME=$(dig +stats +time=1 @"$DNS" google.com 2>/dev/null | grep "Query time" | awk '{print $4}')
        if [[ -n "$RESPONSE_TIME" ]]; then
            dialog --title "DNS Validated" --yesno "DNS server $DNS responded in ${RESPONSE_TIME}ms.\nAdd this to your DNS list?" 8 60
            [[ $? -eq 0 ]] && DNS_SERVERS+=("$DNS")
            break
        else
            dialog --title "Unreachable" --yesno "DNS server $DNS did not respond.\nWould you like to edit and try again?" 8 60
            if [[ $? -eq 0 ]]; then
                DNS=$(dialog --stdout --inputbox "Re-enter or correct the DNS IP address:" 8 50 "$DNS")
                [[ -z "$DNS" ]] && break
                continue
            else
                break
            fi
        fi
    done
done

# Final confirmation screen
if [[ ${#DNS_SERVERS[@]} -eq 0 ]]; then
    SUMMARY="No DNS servers selected.\nThis will remove any custom DNS and use your router's default.\n\nProceed?"
else
    SUMMARY="The following DNS servers will be configured:\n\n"
    for dns in "${DNS_SERVERS[@]}"; do
        SUMMARY+="$dns\n"
    done
    SUMMARY+="\nProceed with applying these settings?"
fi

dialog --title "Confirm DNS Configuration" --yesno "$SUMMARY" 15 60
[[ $? -ne 0 ]] && dialog --msgbox "No changes were made." 6 40 && clear && exit 0

# Write to resolv.conf
echo "# Generated by dns_update.sh" > "$RESOLV_FILE"
if [[ ${#DNS_SERVERS[@]} -eq 0 ]]; then
    echo "# No custom DNS servers configured. Using default (likely router's)." >> "$RESOLV_FILE"
else
    for dns in "${DNS_SERVERS[@]}"; do
        echo "nameserver $dns" >> "$RESOLV_FILE"
    done
fi

# Summary
FINAL_MSG="DNS configuration complete.\n\nFinal DNS list:\n"
if [[ ${#DNS_SERVERS[@]} -eq 0 ]]; then
    FINAL_MSG+="(Using router/default DNS)\n"
else
    for dns in "${DNS_SERVERS[@]}"; do
        FINAL_MSG+="$dns\n"
    done
fi

dialog --title "DNS Summary" --msgbox "$FINAL_MSG" 12 60

# Offer to restart networking
dialog --title "Apply Changes" --yesno "Would you like to restart networking now to apply the new DNS settings?" 8 60
if [ $? -eq 0 ]; then
    systemctl restart networking && dialog --msgbox "Networking restarted successfully." 6 50
else
    dialog --msgbox "Changes will take effect after a reboot or manual network restart." 6 50
fi

clear
echo "DNS configuration complete."
exit 0
